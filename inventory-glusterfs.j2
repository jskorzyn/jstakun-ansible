[OSEv3:children]
{% if LB == "yes" %}
lb
{% endif %}
masters
etcd
nodes
{% if CNS == "yes" %}
glusterfs_registry
glusterfs
{% endif %}
new_nodes
new_masters
new_etcd

{% if LB == "yes" %}
[lb]
{% for item in OCP_LB_NODES %}
{{ item }}
{% endfor %}
{% endif %}

[masters]
{% for item in OCP_MASTERS %}
{{ item }}
{% endfor %}

[etcd]
{% for item in OCP_MASTERS %}
{{ item }}
{% endfor %}

[nodes]
{% for item in OCP_MASTERS %}
{{ item }} openshift_node_labels="{'region': 'master', 'zone':'default'}" openshift_schedulable=True
{% endfor %}
{% for item in OCP_INFRA_NODES %}
{{ item }} openshift_node_labels="{'region': 'infra', 'zone':'default'}" node=True storage=True openshift_schedulable=True
{% endfor %}
{% for item in OCP_APP_NODES %}
{{ item.host }} openshift_node_labels="{'region': '{{ item.region }}', 'zone':'{{ item.zone }}', 'node-index':'{{ loop.index }}'}" node=True storage=True openshift_schedulable=True
{% endfor %}

{% if CNS == "yes" %}
[glusterfs_registry]
{% for item in OCP_INFRA_NODES %}
{{ item }} glusterfs_devices="[ '{{ CNS_DEVICE }}' ]"
{% endfor %}

[glusterfs]
{% for item in OCP_APP_NODES %}
{{ item.host }} glusterfs_devices="[ '{{ CNS_DEVICE }}' ]"
{% endfor %}
{% endif %}

[new_nodes]
#add new nodes to existing cluster 

[new_masters]
#add new masters to existing cluster 

[new_etcd]
#add new etcd to existing cluster 

[OSEv3:vars]

# ssh connection

ansible_ssh_user={{ OCP_SSH_USER }}
ansible_become={{ OCP_SSH_BECOME }} 

# Debug level for all OpenShift components (Defaults to 2)

debug_level=2

# security

{% if OCP_IPA == "yes" %}
openshift_master_identity_providers=[{'name': 'idm', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': 'uid=admin,cn=users,cn=accounts,{{ OCP_IPA_DOMAIN }}', 'bindPassword': '{{ OCP_IPA_PASSWORD }}', 'ca': '/etc/origin/master/ipaÂ­.crt', 'insecure': 'false', 'url': 'ldap://{{ OCP_IPA_HOSTNAME }}/cn=users,cn=accounts,{{ OCP_IPA_DOMAIN }}?uid?sub?(memberOf=cn=ocp-users,cn=groups,cn=accounts,{{ OCP_IPA_DOMAIN }})'}]
{% else %}
#passwords are manager1
#openshift_master_identity_providers=[{'name': 'allow_all_provider', 'login': 'true', 'challenge': 'true', 'kind': 'AllowAllPasswordIdentityProvider']
openshift_master_identity_providers=[{'name': 'htpasswd_provider', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'admin':'$apr1$AFC0UGRq$..GYeSig63Bv4e7zzzfFD/','developer':'$apr1$AFC0UGRq$..GYeSig63Bv4e7zzzfFD/', 'tester':'$apr1$AFC0UGRq$..GYeSig63Bv4e7zzzfFD/'}
{% endif %}

# OpenShift deployment parameters

openshift_deployment_type=openshift-enterprise
#you could comment out this variable if you want this checks to be executed
openshift_disable_check=disk_availability,memory_availability,docker_image_availability
dynamic_volumes_check=false
openshift_clock_enabled=true
os_firewall_use_firewalld=true
#from 3.9 both ports must match
openshift_master_api_port=443
openshift_master_console_port=443

# CRI-O

#openshift_use_crio=true
#openshift_crio_use_rpm=true
#openshift_crio_enable_docker_gc=true
#openshift_crio_docker_gc_node_selector={'runtime': 'cri-o'}

# Wildcard application hostname suffix

openshift_master_default_subdomain={{ OCP_DEFAULT_SUBDOMAIN }}

# Developer access to WebUI and API

openshift_master_cluster_hostname={{ OCP_MASTER_HOSTNAME }}
openshift_master_cluster_public_hostname={{ OCP_MASTER_PUBLIC_HOSTNAME }}
openshift_master_cluster_method=native

# OpenShift Networking

#redhat/openshift-ovs-multitenant or redhat/openshift-ovs-networkpolicy or redhat/openshift-ovs-subnet
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'

{% if OSP == "yes" %}
# Openstack

openshift_cloudprovider_kind=openstack
openshift_cloudprovider_openstack_auth_url={{ OSP_AUTH_URL }}
openshift_cloudprovider_openstack_username={{ OSP_USERNAME }}
openshift_cloudprovider_openstack_password={{ OSP_PASSWORD }}
openshift_cloudprovider_openstack_tenant_id={{ OSP_TENANT_ID }}
openshift_cloudprovider_openstack_tenant_name={{ OSP_TENANT_NAME }}
openshift_cloudprovider_openstack_region={{ OSP_REGION }}
openshift_cloudprovider_openstack_domain_id={{ OSP_DOMAIN_ID }}
openshift_cloudprovider_openstack_domain_name={{ OSP_DOMAIN_NAME }}
{% elif AWS == "yes" %}
# AWS

openshift_cloudprovider_kind=aws
openshift_cloudprovider_aws_access_key={{ AWS_KEY }}
openshift_cloudprovider_aws_secret_key={{ AWS_SECRET }}
#add following tag to each OCP cluster ec2 instance: KEY: kubernetes.io/cluster/default VALUE: 123456
openshift_clusterid=123456
{% elif AZURE == "yes" %}
# Azure

openshift_cloudprovider_kind=azure
osm_controller_args={'cloud-provider': ['azure'], 'cloud-config': ['/etc/azure/azure.conf']}
osm_api_server_args={'cloud-provider': ['azure'], 'cloud-config': ['/etc/azure/azure.conf']}
openshift_node_kubelet_args={'cloud-provider': ['azure'], 'cloud-config': ['/etc/azure/azure.conf'], 'enable-controller-attach-detach': ['true']}
{% endif %}
{% if HTTP_PROXY == "yes" %}

# HTTP proxy settings
openshift_http_proxy={{ OCP_HTTP_PROXY }}
openshift_https_proxy={{ OCP_HTTPS_PROXY }}
#comma separated list of host names or wildcard host names
openshift_no_proxy={{ OCP_NO_PROXY }}
openshift_builddefaults_git_http_proxy={{ OCP_HTTP_PROXY }}
openshift_builddefaults_git_https_proxy={{ OCP_HTTPS_PROXY }}
openshift_builddefaults_http_proxy={{ OCP_HTTP_PROXY }}
openshift_builddefaults_https_proxy={{ OCP_HTTPS_PROXY }}
openshift_builddefaults_no_proxy={{ OCP_NO_PROXY }}
{% endif %}

# Enable cockpit

osm_use_cockpit=true

{% if CNS == "yes" %}
# CNS setup

openshift_storage_glusterfs_version={{ CNS_VERSION }}
openshift_storage_glusterfs_block_version={{ CNS_VERSION }}
openshift_storage_glusterfs_s3_version={{ CNS_VERSION }}
openshift_storage_glusterfs_heketi_version={{ CNS_VERSION }}
openshift_storage_glusterfs_registry_version={{ CNS_VERSION }}
openshift_storage_glusterfs_registry_block_version={{ CNS_VERSION }}
openshift_storage_glusterfs_registry_s3_version={{ CNS_VERSION }}
openshift_storage_glusterfs_registry_heketi_version={{ CNS_VERSION }}

openshift_storage_glusterfs_registry_block_deploy=true
openshift_storage_glusterfs_registry_block_host_vol_size=50
openshift_storage_glusterfs_registry_block_storageclass=true
openshift_storage_glusterfs_registry_block_storageclass_default=true

openshift_storageclass_default=false
{% endif %}

# Routers

openshift_hosted_router_selector='region=infra'
openshift_hosted_router_replicas={{ OCP_INFRA_NODES|length }}

# Registry

openshift_hosted_registry_routehost=registry.{{ OCP_DEFAULT_SUBDOMAIN }}
openshift_hosted_registry_selector='region=infra'
openshift_hosted_registry_replicas={{ OCP_INFRA_NODES|length }}
#openshift_hosted_registry_storage_volume_size=10Gi
{% if CNS == "yes" %}
openshift_hosted_registry_storage_kind=glusterfs
{% elif AWS == "yes" %}
#openshift_hosted_registry_storage_kind=object
#openshift_hosted_registry_storage_provider=s3
#openshift_hosted_registry_storage_s3_accesskey={{ AWS_KEY }}
#openshift_hosted_registry_storage_s3_secretkey={{ AWS_SECRET }}
#openshift_hosted_registry_storage_s3_bucket=bucket_name <-- change this
#openshift_hosted_registry_storage_s3_region=bucket_region <-- change this
#openshift_hosted_registry_storage_s3_chunksize=26214400
#openshift_hosted_registry_storage_s3_rootdirectory=/registry
#openshift_hosted_registry_pullthrough=true
#openshift_hosted_registry_acceptschema2=true
#openshift_hosted_registry_enforcequota=true
{% elif AZURE == "yes" %}
openshift_hosted_registry_storage_provider=azure_blob
openshift_hosted_registry_storage_azure_blob_accountname=<accountname>  <-- change this
openshift_hosted_registry_storage_azure_blob_accountkey=<base64encodedaccountkey>  <-- change this
openshift_hosted_registry_storage_azure_blob_container=registry
openshift_hosted_registry_storage_azure_blob_realm=core.windows.net
{% elif OSP == "yes" %}
# cinder
#openshift_hosted_registry_storage_kind=openstack
#openshift_hosted_registry_storage_access_modes=['ReadWriteOnce']
#openshift_hosted_registry_storage_openstack_filesystem=xfs
#openshift_hosted_registry_storage_openstack_volumeID=<existing cinder volume id>
# swift
#openshift_hosted_registry_storage_provider=swift
#openshift_hosted_registry_storage_swift_authurl={{ OSP_AUTH_URL }}
#openshift_hosted_registry_storage_swift_username={{ OSP_USERNAME }}
#openshift_hosted_registry_storage_swift_password={{ OSP_PASSWORD }}
#openshift_hosted_registry_storage_swift_container=registry
#openshift_hosted_registry_storage_swift_region={{ OSP_REGION }}
#openshift_hosted_registry_storage_swift_tenant={{ OSP_TENANT }}
#openshift_hosted_registry_storage_swift_tenantid={{ OSP_TENANT_ID }}
#openshift_hosted_registry_storage_swift_domain={{ OSP_DOMAIN }}
#openshift_hosted_registry_storage_swift_domainid={{ OSP_DOMAIN_ID }}
{% endif %}

# Logging

openshift_logging_install_logging=true
openshift_logging_storage_kind=dynamic
openshift_logging_es_nodeselector={"region":"infra"}
openshift_logging_kibana_nodeselector={"region":"infra"}
openshift_logging_curator_nodeselector={"region":"infra"}
#openshift_logging_eventrouter_nodeselector={"region":"infra"}
openshift_logging_es_memory_limit=2G
openshift_logging_es_pvc_size=5G
openshift_logging_curator_default_days=7
{% if CNS == "yes" %}
openshift_logging_es_pvc_storage_class_name="glusterfs-registry-block"
{% endif %}

# Metrics

openshift_metrics_install_metrics=true
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_hawkular_nodeselector={"region":"infra"}
openshift_metrics_cassandra_nodeselector={"region":"infra"}
openshift_metrics_heapster_nodeselector={"region":"infra"}
openshift_metrics_cassandra_limits_memory=2Gi
openshift_metrics_cassandra_pvc_size=5Gi
{% if CNS == "yes" %}
openshift_metrics_cassanda_pvc_storage_class_name="glusterfs-registry-block
{% endif %}


# Service Catalog

openshift_enable_service_catalog=true
openshift_hosted_etcd_storage_kind=dynamic
openshift_template_service_broker_namespaces=['openshift']
template_service_broker_install=true
ansible_service_broker_local_registry_whitelist=['.*-apb$']

# Prometheus

#openshift_hosted_prometheus_deploy=true
#openshift_prometheus_namespace=openshift-infra
#openshift_prometheus_node_selector={"region":"infra"}
#openshift_prometheus_storage_kind=dynamic
#openshift_prometheus_alertmanager_storage_kind=dynamic
#openshift_prometheus_alertbuffer_storage_kind=dynamic

# Management

#openshift_management_storage_class=preconfigured

